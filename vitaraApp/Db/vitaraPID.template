#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


#
# Vitara Laser Oscillator
# PID Control loop
#
# Required macros:
#DEV			Device prefix for each new PV in this file
#FREQ_MOTOR	PV name of Vitara freq motor
#PHASE_MOTOR	PV name of phase control motor
#RF_LOCK		PV output that enables RF locking
#PIEZO_AMP_IN	Piezo Amp Control voltage readback
#PIEZO_AMP_MON	Piezo Amp Monitor output
# Optional macros:
#   LOCK_ON_VAL, 0.0
#   LOCK_OFF_VAL,5.0 Systems using an analog output as TTL signals can take
#                    the default values for the lock enable values. Otherwise,
#                    define these, probably as 0 and 1 for digital outputs.
#                    Note: On the locking system, the enable line is active
#                    low with a pulldown resistor so that it is enabled when
#                    disconnected.

# Piezo Amplifier Monitor voltage (50mV/V)
record( ai, "$(DEV):PIEZO_AMP_MON" )
{
  field(DESC, "Piezo Amp Monitor")
  field(INP, "$(PIEZO_AMP_MON) CP MS")
  field(EGU, "V")
  field(PREC, "3")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ai, "$(DEV):PIEZO_AMP_IN" )
{
  field(DESC, "Piezo control voltage")
  field(INP, "$(PIEZO_AMP_IN) CP MS")
  field(EGU, "V")
  field(PREC, "3")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ao, "$(DEV):PID_COARSE_TARGET" )
{
  field(DESC, "Target setpoint for PID")
  field(EGU, "rad")
  field(PREC, "3")
  field(VAL, "2.0")
  field(PINI, "YES")
  info(autosaveFields, "VAL DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

# Phase PID control record
# R/W Fields:
#STPL	Set point CA link
#SMSL	SetPt Mode: closed_loop or supervisory
#VAL		Target  for controlled value (set point )
#FBON	Feedback Output Enable
#INP		DB link for readback of controlled value
#KP		Proportional gain
#KI		Integral     gain
#KD		Derivative   gain
#OUTL	DB link for computed feedback output value
#DRVL	Low  limit on I and OVAL
#DRVH	High limit on I and OVAL
#I		Integral     term
# Read Only Fields
#P		Proportional term
#D		Derivative   term
#CVAL	Controlled value from INP link
#ERR		Current Error (VAL - CVAL )
#OVAL	Output value  (P + I + D )
record( epid, "$(DEV):PID_COARSE" )
{
  field(DESC, "Piezo motor PID")
  field(SCAN, "10 second")
  field(STPL, "$(DEV):PID_COARSE_TARGET NPP")
  field(SMSL, "closed_loop")
  field(INP, "$(DEV):PIEZO_AMP_MON")
  field(OUTL, "$(DEV):PID_COARSE_OUTPUT PP")
  field(PREC, "4")
  field(DRVH, "0.002")
  field(DRVL, "-0.002")
  field(KP, "-0.001")
  field(EGU, "V")
  field(FLNK, "$(DEV):PID_COARSE_MOTOR_TGT")
  info(autosaveFields, "SCAN KP KI KD FBON DRVL DRVH VAL OVAL")
}

# Compute new motor position from PID output value
# Updates on each PID process,
# but not when motor RBV changes, so we can
# show where the PID thinks the motor should be
record( calcout, "$(DEV):PID_COARSE_MOTOR_TGT" )
{
  field(DESC, "Set coarse mtr with PID")
  field(CALC, "A+B")
  field(INPA, "$(DEV):PID_COARSE.OVAL NPP MS")
  field(INPB, "$(FREQ_MOTOR).RBV CA MS")
  field(EGU, "mm")
  field(PREC, "4")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ai, "$(DEV):PID_COARSE_P" )
{
  field(DESC, "PID Phase PTerm")
  field(INP, "$(DEV):PID_COARSE.P CP MS")
  field(EGU, "V")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ai, "$(DEV):PID_COARSE_I" )
{
  field(DESC, "PID Phase ITerm")
  field(INP, "$(DEV):PID_COARSE.I CP MS")
  field(EGU, "V")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ai, "$(DEV):PID_COARSE_D" )
{
  field(DESC, "PID Phase DTerm")
  field(INP, "$(DEV):PID_COARSE.D CP MS")
  field(EGU, "V")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ai, "$(DEV):PID_COARSE_ERR" )
{
  field(DESC, "PID Phase Error")
  field(INP, "$(DEV):PID_COARSE.ERR CP MS")
  field(EGU, "V")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

# Processes when the PID record, $(DEV):PID_COARSE,
# write's OVAL to this record
# This will only happen when the PID feedback is enabled,
# so this is when we want to write the tgt to the motor
record( ao, "$(DEV):PID_COARSE_OUTPUT" )
{
  field(DESC, "PID output value")
  field(EGU, "mm")
  field(PREC, "4")
  field(FLNK, "$(DEV):PID_COARSE_WRITE_MOTOR PP NMS")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record( ao, "$(DEV):PID_COARSE_WRITE_MOTOR" )
{
  field(DESC, "Write PID tgt to motor")
  field(OMSL, "closed_loop")
  field(DOL, "$(DEV):PID_COARSE_MOTOR_TGT PP MS")
  field(OUT, "$(FREQ_MOTOR) CA NMS")
# PCDS specific SDIS. Don't merge LBLN part
#field( SDIS, "$(DEV):PID_COARSE_MOTOR_ENABLE NPP NMS" )
  field(SDIS, "$(DEV):RF_LOCK_ENABLE CPP NMS")
  field(DISV, "0")
}

# PCDS specific calculation. Don't merge LBLN part
#record( calc, "$(DEV):PID_COARSE_MOTOR_ENABLE" )
#{
#field( DESC, "Enable motor if either system locked" )
#field( INPA, "$(DEV):PHASE_LOCKED CPP NMS" )
#}
record(calcout, "$(DEV):PHASE_LOCKED_CALC") {
  field(INPA, "$(DEV):RF_LOCK_ENABLE CPP MS")
  field(INPB, "$(DEV):PIEZO_AMP_MON CPP MS")
  field(INPC, "$(DEV):PIEZO_AMP_MON.LOLO NPP NMS")
  field(INPD, "$(DEV):PIEZO_AMP_MON.HIHI NPP NMS")
  field(INPE, "$(CH)RF_PWR CPP MS")
  field(INPF, "$(CH)RF_PWR.LOLO NPP NMS")
  field(INPG, "$(CH)DIODE_PWR CPP MS")
  field(INPH, "$(CH)DIODE_PWR.LOLO NPP NMS")
  field(INPI, "$(DEV):FREQ_ERR PP MS")
  field(INPJ, "$(DEV):FREQ_ERR.HIHI NPP NMS")
  field(INPK, "$(CH)CALC_PHASE_LAST_60_STD PP MS")
  field(INPL, "$(CH)CALC_PHASE_LAST_60_STD.HIHI NPP NMS")
  field(CALC, "A=1&&B>C&&B<D&&E>F&&G>H&&ABS(I)<J&&K<L")
  field(OUT, "$(DEV):PHASE_LOCKED PP MS")
  field(PREC, "4")
}

record( bo, "$(DEV):PHASE_LOCKED" )
{
  field(DESC, "Laser timing locked")
  field(ZNAM, "Unlocked")
  field(ZSV, "MAJOR")
  field(ONAM, "Locked")
  field(OSV, "NO_ALARM")
  field(PINI, "YES")
}

# RF_LOCK_ENABLE is same as FACET PID_MODE
record( bo, "$(DEV):RF_LOCK_ENABLE" )
{
  field(DESC, "RF Locking Enabled")
  field(ZNAM, "Disabled")
  field(ZSV, "MINOR")
  field(ONAM, "Enabled")
  field(OSV, "NO_ALARM")
  field(FLNK, "$(DEV):RF_LOCK_ENABLE_CALC PP NMS" )
  field(PINI, "YES")
  field(SCAN, "1 second")
  info(autosaveFields, "VAL")
}

record( calcout, "$(DEV):RF_LOCK_ENABLE_CALC" )
{
  field(INPA, "$(DEV):RF_LOCK_ENABLE NPP NMS")
  field(CALC, "A ? $(LOCK_ON_VAL=0.0) : $(LOCK_OFF_VAL=5.0)")
  field(OUT, "$(RF_LOCK) CA NMS")
}

record( ai, "$(DEV):PHASE_MOTOR_POS" )
{
  field(DESC, "Cur phase motor pos")
  field(INP, "$(PHASE_MOTOR).RBV CP MS")
  field(EGU, "ps")
  field(PREC, "6")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

#! Further lines contain data used by VisualDCT
#! View(54,6,1.0)
#! Record("$(DEV):PIEZO_AMP_MON",1480,48,0,0,"$(DEV):PIEZO_AMP_MON")
#! Field("$(DEV):PIEZO_AMP_MON.INP",16777215,1,"$(DEV):PIEZO_AMP_MON.INP")
#! Field("$(DEV):PIEZO_AMP_MON.VAL",16777215,0,"$(DEV):PIEZO_AMP_MON.VAL")
#! Field("$(DEV):PIEZO_AMP_MON.LOLO",16777215,0,"$(DEV):PIEZO_AMP_MON.LOLO")
#! Field("$(DEV):PIEZO_AMP_MON.HIHI",16777215,0,"$(DEV):PIEZO_AMP_MON.HIHI")
#! Record("$(DEV):PIEZO_AMP_IN",1960,428,0,0,"$(DEV):PIEZO_AMP_IN")
#! Field("$(DEV):PIEZO_AMP_IN.INP",16777215,1,"$(DEV):PIEZO_AMP_IN.INP")
#! Record("$(DEV):PID_COARSE_TARGET",340,14,0,0,"$(DEV):PID_COARSE_TARGET")
#! Field("$(DEV):PID_COARSE_TARGET.VAL",16777215,0,"$(DEV):PID_COARSE_TARGET.VAL")
#! Record("$(DEV):PID_COARSE",580,17,0,0,"$(DEV):PID_COARSE")
#! Field("$(DEV):PID_COARSE.STPL",16777215,0,"$(DEV):PID_COARSE.STPL")
#! Link("$(DEV):PID_COARSE.STPL","$(DEV):PID_COARSE_TARGET.VAL")
#! Field("$(DEV):PID_COARSE.INP",16777215,1,"$(DEV):PID_COARSE.INP")
#! Link("$(DEV):PID_COARSE.INP","$(DEV):PIEZO_AMP_MON.VAL")
#! Field("$(DEV):PID_COARSE.OUTL",16777215,1,"$(DEV):PID_COARSE.OUTL")
#! Link("$(DEV):PID_COARSE.OUTL","$(DEV):PID_COARSE_OUTPUT.VAL")
#! Field("$(DEV):PID_COARSE.FLNK",16777215,1,"$(DEV):PID_COARSE.FLNK")
#! Link("$(DEV):PID_COARSE.FLNK","$(DEV):PID_COARSE_MOTOR_TGT")
#! Field("$(DEV):PID_COARSE.OVAL",16777215,1,"$(DEV):PID_COARSE.OVAL")
#! Field("$(DEV):PID_COARSE.P",16777215,0,"$(DEV):PID_COARSE.P")
#! Field("$(DEV):PID_COARSE.I",16777215,0,"$(DEV):PID_COARSE.I")
#! Field("$(DEV):PID_COARSE.D",16777215,0,"$(DEV):PID_COARSE.D")
#! Field("$(DEV):PID_COARSE.ERR",16777215,1,"$(DEV):PID_COARSE.ERR")
#! Record("$(DEV):PID_COARSE_MOTOR_TGT",1100,300,0,0,"$(DEV):PID_COARSE_MOTOR_TGT")
#! Field("$(DEV):PID_COARSE_MOTOR_TGT.INPA",16777215,0,"$(DEV):PID_COARSE_MOTOR_TGT.INPA")
#! Link("$(DEV):PID_COARSE_MOTOR_TGT.INPA","$(DEV):PID_COARSE.OVAL")
#! Field("$(DEV):PID_COARSE_MOTOR_TGT.INPB",16777215,1,"$(DEV):PID_COARSE_MOTOR_TGT.INPB")
#! Field("$(DEV):PID_COARSE_MOTOR_TGT.VAL",16777215,0,"$(DEV):PID_COARSE_MOTOR_TGT.VAL")
#! Record("$(DEV):PID_COARSE_P",280,282,0,0,"$(DEV):PID_COARSE_P")
#! Field("$(DEV):PID_COARSE_P.INP",16777215,1,"$(DEV):PID_COARSE_P.INP")
#! Link("$(DEV):PID_COARSE_P.INP","$(DEV):PID_COARSE.P")
#! Record("$(DEV):PID_COARSE_I",280,402,0,0,"$(DEV):PID_COARSE_I")
#! Field("$(DEV):PID_COARSE_I.INP",16777215,1,"$(DEV):PID_COARSE_I.INP")
#! Link("$(DEV):PID_COARSE_I.INP","$(DEV):PID_COARSE.I")
#! Record("$(DEV):PID_COARSE_D",280,502,0,0,"$(DEV):PID_COARSE_D")
#! Field("$(DEV):PID_COARSE_D.INP",16777215,1,"$(DEV):PID_COARSE_D.INP")
#! Link("$(DEV):PID_COARSE_D.INP","$(DEV):PID_COARSE.D")
#! Record("$(DEV):PID_COARSE_ERR",300,622,0,0,"$(DEV):PID_COARSE_ERR")
#! Field("$(DEV):PID_COARSE_ERR.INP",16777215,1,"$(DEV):PID_COARSE_ERR.INP")
#! Link("$(DEV):PID_COARSE_ERR.INP","$(DEV):PID_COARSE.ERR")
#! Record("$(DEV):PID_COARSE_OUTPUT",860,8,0,0,"$(DEV):PID_COARSE_OUTPUT")
#! Field("$(DEV):PID_COARSE_OUTPUT.VAL",16777215,0,"$(DEV):PID_COARSE_OUTPUT.VAL")
#! Field("$(DEV):PID_COARSE_OUTPUT.FLNK",16777215,1,"$(DEV):PID_COARSE_OUTPUT.FLNK")
#! Link("$(DEV):PID_COARSE_OUTPUT.FLNK","$(DEV):PID_COARSE_WRITE_MOTOR")
#! Record("$(DEV):PID_COARSE_WRITE_MOTOR",1100,40,0,1,"$(DEV):PID_COARSE_WRITE_MOTOR")
#! Field("$(DEV):PID_COARSE_WRITE_MOTOR.DOL",16777215,0,"$(DEV):PID_COARSE_WRITE_MOTOR.DOL")
#! Link("$(DEV):PID_COARSE_WRITE_MOTOR.DOL","$(DEV):PID_COARSE_MOTOR_TGT.VAL")
#! Field("$(DEV):PID_COARSE_WRITE_MOTOR.OUT",16777215,1,"$(DEV):PID_COARSE_WRITE_MOTOR.OUT")
#! Field("$(DEV):PID_COARSE_WRITE_MOTOR.SDIS",16777215,1,"$(DEV):PID_COARSE_WRITE_MOTOR.SDIS")
#! Link("$(DEV):PID_COARSE_WRITE_MOTOR.SDIS","$(DEV):PHASE_LOCKED.VAL")
#! Record("$(DEV):PHASE_LOCKED_CALC",1720,-25,0,0,"$(DEV):PHASE_LOCKED_CALC")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPA",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPA")
#! Link("$(DEV):PHASE_LOCKED_CALC.INPA","$(DEV):RF_LOCK_ENABLE.VAL")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPB",16777215,0,"$(DEV):PHASE_LOCKED_CALC.INPB")
#! Link("$(DEV):PHASE_LOCKED_CALC.INPB","$(DEV):PIEZO_AMP_MON.VAL")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPC",16777215,0,"$(DEV):PHASE_LOCKED_CALC.INPC")
#! Link("$(DEV):PHASE_LOCKED_CALC.INPC","$(DEV):PIEZO_AMP_MON.LOLO")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPD",16777215,0,"$(DEV):PHASE_LOCKED_CALC.INPD")
#! Link("$(DEV):PHASE_LOCKED_CALC.INPD","$(DEV):PIEZO_AMP_MON.HIHI")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPE",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPE")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPF",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPF")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPG",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPG")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPH",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPH")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPI",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPI")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPJ",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPJ")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPK",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPK")
#! Field("$(DEV):PHASE_LOCKED_CALC.INPL",16777215,1,"$(DEV):PHASE_LOCKED_CALC.INPL")
#! Field("$(DEV):PHASE_LOCKED_CALC.OUT",16777215,0,"$(DEV):PHASE_LOCKED_CALC.OUT")
#! Link("$(DEV):PHASE_LOCKED_CALC.OUT","$(DEV):PHASE_LOCKED.VAL")
#! Record("$(DEV):PHASE_LOCKED",1460,340,0,0,"$(DEV):PHASE_LOCKED")
#! Field("$(DEV):PHASE_LOCKED.VAL",16777215,0,"$(DEV):PHASE_LOCKED.VAL")
#! Record("$(DEV):RF_LOCK_ENABLE",1960,46,0,0,"$(DEV):RF_LOCK_ENABLE")
#! Field("$(DEV):RF_LOCK_ENABLE.VAL",16777215,1,"$(DEV):RF_LOCK_ENABLE.VAL")
#! Field("$(DEV):RF_LOCK_ENABLE.OUT",16777215,1,"$(DEV):RF_LOCK_ENABLE.OUT")
#! Record("$(DEV):RF_LOCK_ENABLE_CALC",2200,22,0,0,"$(DEV):RF_LOCK_ENABLE_CALC")
#! Field("$(DEV):RF_LOCK_ENABLE_CALC.INPA",16777215,0,"$(DEV):RF_LOCK_ENABLE_CALC.INPA")
#! Link("$(DEV):RF_LOCK_ENABLE_CALC.INPA","$(DEV):RF_LOCK_ENABLE.VAL")
#! Field("$(DEV):RF_LOCK_ENABLE_CALC.OUT",16777215,1,"$(DEV):RF_LOCK_ENABLE_CALC.OUT")
#! Record("$(DEV):PHASE_MOTOR_POS",1960,268,0,0,"$(DEV):PHASE_MOTOR_POS")
#! Field("$(DEV):PHASE_MOTOR_POS.INP",16777215,1,"$(DEV):PHASE_MOTOR_POS.INP")
