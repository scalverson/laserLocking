#
# ai_hist.substitutions
#
# Uses the generated ai_hist_pattern.db template
# to create history waveforms for each of the
# specified PV's along with AVG, MAX, MIN,
# RMS, and StdDev for each history.
#
# Required Macros:
#	PV		 - PV name
# Optional Macros:
#	EGU		 - Engineering units, default to ""
#	RMS_LOLO - Low  alarm   limit for $(PV)_RMS, default 0
#	RMS_LOW  - Low  warning limit for $(PV)_RMS, default 0
#	RMS_HIGH - High warning limit for $(PV)_RMS, default 0
#	RMS_HIHI - High alarm   limit for $(PV)_RMS, default 0

# Example
file ai_hist_pattern.db
{
	pattern
	{	PV,							EGU			}
	{	"$(P):FREQ_CUR",			"Hz"		}
	{	"$(P):FREQ_ERR",			"Hz"		}
	{	"$(P):FREQ_ERR_SMOOTHED",	"Hz"		}
	{	"$(P):FREQ_MOTOR_POS",		"mm"		}
	{	"$(P):FREQ_MOTOR_TGT",		"mm"		}
	{	"$(P):PHASE_MOTOR_POS",		"ps"		}
	{	"$(P):PID_COARSE_MOTOR_TGT", "mm"	}
	{	"$(P):M1_MOTR_C", 			"mm"		}
	{	"$(P):PID_COARSE_WRITE_MOTOR", "mm"		}
	{	"$(P):PID_COARSE_D",		"rad"		}
	{	"$(P):PID_COARSE_ERR",		"rad"		}
	{	"$(P):PID_COARSE_I",		"rad"		}
	{	"$(P):PID_COARSE_OUTPUT",	"rad"		}
	{	"$(P):PID_COARSE_P",		"rad"		}
	{	"$(P):PID_COARSE_TARGET",	"rad"		}
	{	"$(P):PIEZO_AMP_IN",		"V"			}
	{	"$(P):PIEZO_AMP_MON",		"V"			}
	{	"$(P):FS_TIMING_ERROR",     "ns"		}
	{	"$(P):FS_BUCKET_ERROR",     "buckets"	}
	{	"$(P):FS_UNFIXED_ERROR",    "ps"		}
	{	"$(P):FS_TIC_ERROR",     	"ticks"		}
	{	"$(SR620):GetMeasMean",	"s"			}
	{	"$(SR620):GetMeasMean_ns",	"ns"	}
	{	"$(SR620):GetOffsetInvMeasMean","s"	}
	{	"$(SR620):GetOffsetInvMeasMean_ns","ns"	}
}
